{"version":3,"sources":["types/Status.ts","api/api.ts","context/TodoContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","services/getFilteredTodos.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoContext","React","createContext","todos","todo","status","All","query","user","loading","userLoading","TodoUpdateContext","setTodos","_todos","setTodo","_todo","setStatus","_status","setQuery","_query","setUser","_user","setLoading","_loading","setUserLoading","TodoProvider","children","useState","useEffect","data","finally","userId","valueTodoContext","valueTodoUpdateContext","useMemo","Provider","value","TodoItem","selectedTodo","useContext","className","classNames","id","completed","title","type","onClick","TodoList","filteredTodos","filter","normalizedQuery","toLowerCase","titleMatch","includes","statusMatch","Active","Completed","getFilteredTodos","map","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6b2fa17.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, {\n  ReactNode,\n  useState,\n  useMemo,\n  useEffect,\n} from 'react';\nimport { Todo } from '../types/Todo';\nimport { Status } from '../types/Status';\nimport { User } from '../types/User';\nimport { getTodos, getUser } from '../api/api';\n\ntype Props = {\n  children: ReactNode\n};\n\nexport const TodoContext = React.createContext({\n  todos: [] as Todo[],\n  todo: null as Todo | null,\n  status: Status.All,\n  query: '',\n  user: null as User | null,\n  loading: false,\n  userLoading: false,\n});\n\nexport const TodoUpdateContext = React.createContext({\n  setTodos: (_todos: Todo[]) => { },\n  setTodo: (_todo: Todo | null) => { },\n  setStatus: (_status: Status) => { },\n  setQuery: (_query: string) => { },\n  setUser: (_user: User | null) => { },\n  setLoading: (_loading: boolean) => { },\n  setUserLoading: (_loading: boolean) => { },\n});\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(Status.All);\n  const [query, setQuery] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [userLoading, setUserLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(data => setTodos(data))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    setUserLoading(true);\n\n    if (todo) {\n      getUser(todo.userId)\n        .then(data => setUser(data))\n        .finally(() => setUserLoading(false));\n    }\n  }, [todo]);\n\n  const valueTodoContext = {\n    todos,\n    todo,\n    status,\n    query,\n    user,\n    loading,\n    userLoading,\n  };\n\n  const valueTodoUpdateContext = useMemo(() => {\n    return {\n      setTodos,\n      setTodo,\n      setStatus,\n      setQuery,\n      setUser,\n      setLoading,\n      setUserLoading,\n    };\n  }, []);\n\n  return (\n    <TodoUpdateContext.Provider value={valueTodoUpdateContext}>\n      <TodoContext.Provider value={valueTodoContext}>\n        {children}\n      </TodoContext.Provider>\n    </TodoUpdateContext.Provider>\n  );\n};\n","/* eslint-disable no-console */\nimport classNames from 'classnames';\n\nimport { useContext } from 'react';\n\nimport { TodoContext, TodoUpdateContext } from '../../context/TodoContext';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { todo: selectedTodo } = useContext(TodoContext);\n  const { setTodo } = useContext(TodoUpdateContext);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': selectedTodo?.id === todo.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': selectedTodo?.id !== todo.id,\n              'fa-eye-slash': selectedTodo?.id === todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext, useMemo } from 'react';\n\nimport { TodoContext } from '../../context/TodoContext';\nimport { getFilteredTodos } from '../../services/getFilteredTodos';\n\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList: React.FC = () => {\n  const { todos, status, query } = useContext(TodoContext);\n\n  const filteredTodos = useMemo(() => {\n    return getFilteredTodos(todos, query, status);\n  }, [todos, query, status]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  status: Status,\n) => {\n  return todos.filter(todo => {\n    const normalizedQuery = query.toLowerCase();\n    const normalizedTitle = todo.title.toLowerCase();\n\n    const titleMatch = normalizedTitle.includes(normalizedQuery);\n\n    const statusMatch = status === Status.All\n      || (status === Status.Active && !todo.completed)\n      || (status === Status.Completed && todo.completed);\n\n    return titleMatch && statusMatch;\n  });\n};\n","import { useContext } from 'react';\n\nimport { TodoContext, TodoUpdateContext } from '../../context/TodoContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter = () => {\n  const { query } = useContext(TodoContext);\n  const { setStatus, setQuery } = useContext(TodoUpdateContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\n\nimport { TodoContext, TodoUpdateContext } from '../../context/TodoContext';\n\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const { todo, user, userLoading } = useContext(TodoContext);\n  const { setTodo } = useContext(TodoUpdateContext);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {userLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport React, { useContext } from 'react';\n\nimport { TodoContext } from './context/TodoContext';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const { todo, loading } = useContext(TodoContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './context/TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}