{"version":3,"sources":["types/Status.ts","context/TodoContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api/api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoContext","React","createContext","todos","todo","status","All","query","TodoUpdateContext","setTodos","_todos","setTodo","_todo","setStatus","_status","setQuery","_query","TodoProvider","children","useState","valueTodoContext","valueTodoUpdateContext","useMemo","Provider","value","TodoItem","selectedTodo","useContext","className","classNames","id","completed","title","type","onClick","TodoList","filteredTodos","filter","normalizedQuery","toLowerCase","titleMatch","includes","statusMatch","Active","Completed","map","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","user","setUser","loading","setLoading","useEffect","userId","data","finally","href","email","name","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eefa2d15.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { ReactNode, useState, useMemo } from 'react';\nimport { Todo } from '../types/Todo';\nimport { Status } from '../types/Status';\n\ntype Props = {\n  children: ReactNode\n};\n\nexport const TodoContext = React.createContext({\n  todos: [] as Todo[],\n  todo: {} as Todo | null,\n  status: Status.All,\n  query: '',\n});\n\nexport const TodoUpdateContext = React.createContext({\n  setTodos: (_todos: Todo[]) => { },\n  setTodo: (_todo: Todo | null) => { },\n  setStatus: (_status: Status) => { },\n  setQuery: (_query: string) => { },\n});\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(Status.All);\n  const [query, setQuery] = useState('');\n\n  const valueTodoContext = {\n    todos,\n    todo,\n    status,\n    query,\n  };\n\n  const valueTodoUpdateContext = useMemo(() => {\n    return {\n      setTodos,\n      setTodo,\n      setStatus,\n      setQuery,\n    };\n  }, []);\n\n  return (\n    <TodoUpdateContext.Provider value={valueTodoUpdateContext}>\n      <TodoContext.Provider value={valueTodoContext}>\n        {children}\n      </TodoContext.Provider>\n    </TodoUpdateContext.Provider>\n  );\n};\n","/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoContext, TodoUpdateContext } from '../../context/TodoContext';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { todo: selectedTodo } = useContext(TodoContext);\n  const { setTodo } = useContext(TodoUpdateContext);\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={classNames({\n        'has-background-info-light': selectedTodo?.id === todo.id,\n      })}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far', {\n              'fa-eye': selectedTodo?.id !== todo.id,\n              'fa-eye-slash': selectedTodo?.id === todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { TodoItem } from '../TodoItem';\nimport { TodoContext } from '../../context/TodoContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoList: React.FC = () => {\n  const { todos, status, query } = useContext(TodoContext);\n\n  const filteredTodos = todos.filter(todo => {\n    const normalizedQuery = query.toLowerCase();\n    const normalizedTitle = todo.title.toLowerCase();\n\n    const titleMatch = normalizedTitle.includes(normalizedQuery);\n\n    const statusMatch = status === Status.All\n      || (status === Status.Active && !todo.completed)\n      || (status === Status.Completed && todo.completed);\n\n    return titleMatch && statusMatch;\n  });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { TodoContext, TodoUpdateContext } from '../../context/TodoContext';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter = () => {\n  const { query } = useContext(TodoContext);\n  const { setStatus, setQuery } = useContext(TodoUpdateContext);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from '../types/Todo';\nimport { User } from '../types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api/api';\nimport { TodoContext, TodoUpdateContext } from '../../context/TodoContext';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const { todo } = useContext(TodoContext);\n  const { setTodo } = useContext(TodoUpdateContext);\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (todo) {\n      getUser(todo.userId)\n        .then(data => setUser(data))\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { TodoContext, TodoUpdateContext } from './context/TodoContext';\nimport { getTodos } from './api/api';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const { todo } = useContext(TodoContext);\n  const { setTodos } = useContext(TodoUpdateContext);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(data => setTodos(data))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './context/TodoContext';\n\nReactDOM.render(\n  <TodoProvider>\n    <App />\n  </TodoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}